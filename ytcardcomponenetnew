import { Component, OnInit } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { HttpParams } from '@angular/common/http';
import { Router } from '@angular/router';

import { Observable } from 'rxjs/Observable';
import { Subject } from 'rxjs/Subject';
import 'rxjs/Rx';

import { Ytcard } from './ytcard';
import { YtcardService } from './ytcard.service';
import { FILTERS } from './filter-data';

@Component({
  selector: 'ytcard',
  templateUrl: './ytcard.component.html',
  styleUrls: ['./ytcard.component.css'],
  providers: [YtcardService]
})
export class YtcardComponent implements OnInit {

  ytcards_storage: Ytcard[];
  ytcards_display: Ytcard[];
  private ytcards_observable= new Subject<Ytcard[]>();
  channels: Observable<Ytcard[]>;
  channel_id: string;
  nextPageToken: string;
  api_attempt = 0;
  private searchTerm = new Subject<string>();

  constructor(
    private ytcardService: YtcardService,
    private http: HttpClient,
    private router: Router
  ) { }

  getChannels(){
    this.ytcardService.newGetChannels()
      .then( channels => {
        this.ytcards_display = this.ytcards_display.concat(channels);
        this.addData(channels);
      });
  }

  ngOnInit(): any {
    this.getChannels();

    this.ytcards_storage = [];
    this.ytcards_display = [];
    this.searchTerm
      .debounceTime(1000)
      .map(data => data)
      .subscribe(data =>
        this.ytcards_display = this.ytcardService
          .applyFilter(data)
      );

    this.ytcards_observable
      .map(data => data)
      .subscribe(data => {
        if (data.length < 25) {
          if (this.api_attempt < 6) {
            ++this.api_attempt;
            this.getChannels();
          }
        }
      });
  }

  search(input): any {
    this.searchTerm.next(input);
  }

  addData(data): any {
    this.ytcards_observable.next(data);
  }

  goBack(): any {
    this.router.navigate(['./']);
  }
}